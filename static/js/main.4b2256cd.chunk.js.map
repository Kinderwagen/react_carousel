{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","handleNextClick","maxPosition","stepSize","isLastCheck","infinite","setState","handlePrevClick","this","props","images","step","frameSize","itemWidth","animationDuration","length","className","style","width","map","image","i","transform","transition","src","alt","type","disabled","onClick","React","Component","App","handleChange","e","target","name","value","checked","prevState","htmlFor","id","onChange","min","max","title","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b2256cd.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\ntype State = {\n  position: number,\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    position: 0,\n  };\n\n  handleNextClick = (\n    position: number,\n    maxPosition: number,\n    stepSize: number,\n    isLastCheck: boolean,\n    infinite: boolean,\n  ) => {\n    if (isLastCheck) {\n      this.setState({\n        position: maxPosition,\n      });\n    } else {\n      this.setState(state => ({\n        position: state.position - stepSize,\n      }));\n    }\n\n    if (infinite && position === maxPosition) {\n      this.setState({\n        position: 0,\n      });\n    }\n  };\n\n  handlePrevClick = (\n    position: number,\n    maxPosition: number,\n    stepSize: number,\n    infinite: boolean,\n  ) => {\n    if (this.state.position + (stepSize) >= 0) {\n      this.setState({\n        position: 0,\n      });\n    } else {\n      this.setState(state => ({\n        position: state.position + (stepSize),\n      }));\n    }\n\n    if (infinite && position + stepSize === stepSize) {\n      this.setState({\n        position: maxPosition,\n      });\n    }\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const { position } = this.state;\n\n    const maxPosition = -itemWidth * (images.length - frameSize);\n\n    const stepSize = step * itemWidth;\n\n    const isLastCheck = position - (step * itemWidth) <= maxPosition;\n\n    return (\n      <div\n        className=\"Carousel Carousel--margin\"\n        style={{\n          width: `${frameSize * itemWidth}px`,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n        >\n          {images.map((image, i) => (\n            <li\n              key={image}\n              className=\"Carousel__list-item\"\n              style={{\n                transform: `translateX(${position}px)`,\n                transition: `transform ${animationDuration}ms`,\n              }}\n            >\n              <img\n                src={image}\n                alt={`Emoji-${i + 1}`}\n                width={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__btn-container\">\n          <button\n            className=\"Carousel__btn\"\n            type=\"button\"\n            disabled={!infinite && position === 0}\n            onClick={() => {\n              this.handlePrevClick(position, maxPosition, stepSize, infinite);\n            }}\n          >\n            Prev\n          </button>\n\n          <button\n            className=\"Carousel__btn\"\n            type=\"button\"\n            disabled={!infinite && position === maxPosition}\n            data-cy=\"next\"\n            onClick={() => {\n              this.handleNextClick(\n                position, maxPosition, stepSize, isLastCheck, infinite,\n              );\n            }}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      name, value, type, checked,\n    } = e.target;\n\n    this.setState(prevState => ({\n      ...prevState,\n      [name]: type === 'checkbox' ? checked : value,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\" data-cy=\"title\">\n          Carousel with\n          {' '}\n          {images.length}\n          {' '}\n          images\n        </h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <form className=\"App__form\">\n          <label\n            htmlFor=\"itemId\"\n            className=\"App__label\"\n          >\n            Item width\n\n            <input\n              className=\"App__input\"\n              id=\"itemId\"\n              type=\"number\"\n              name=\"itemWidth\"\n              value={this.state.itemWidth}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label\n            htmlFor=\"frameId\"\n            className=\"App__label\"\n          >\n            Frame size\n\n            <input\n              className=\"App__input\"\n              id=\"frameId\"\n              type=\"number\"\n              name=\"frameSize\"\n              min={1}\n              max={10}\n              value={this.state.frameSize}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label\n            htmlFor=\"stepId\"\n            className=\"App__label\"\n          >\n            Step\n\n            <input\n              className=\"App__input\"\n              id=\"stepId\"\n              type=\"number\"\n              min={1}\n              name=\"step\"\n              value={this.state.step}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label\n            htmlFor=\"animationId\"\n            title=\"name\"\n            className=\"App__label\"\n          >\n            Animation duration\n\n            <input\n              className=\"App__input\"\n              id=\"animationId\"\n              type=\"number\"\n              name=\"animationDuration\"\n              value={this.state.animationDuration}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label htmlFor=\"infinite\">\n\n            Infinite\n\n            <input\n              id=\"infinite\"\n              type=\"checkbox\"\n              name=\"infinite\"\n              checked={this.state.infinite}\n              onChange={this.handleChange}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}